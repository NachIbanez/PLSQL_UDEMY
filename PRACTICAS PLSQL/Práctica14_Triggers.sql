--------------------
/ -- EJERCICIO 1
--------------------

CREATE OR REPLACE TRIGGER TR1_EMPL_DEL
BEFORE DELETE
ON EMPLOYEES
FOR EACH ROW
WHEN (OLD.JOB_ID LIKE '%CLERK')
BEGIN
    RAISE_APPLICATION_ERROR(-20003,'No se puede borrar ningún empleado relacionado con CLERK');
END;

----------------------------
/ --DEMOSTRACION EJERCICIO 1
----------------------------

SELECT * FROM EMPLOYEES WHERE JOB_ID LIKE '%CLERK';

DELETE FROM EMPLOYEES WHERE EMAIL = 'AKHOO';

--------------------
/ -- EJERCICIO 2
--------------------

CREATE TABLE AUDITORIA(
USUARIO VARCHAR(50),
FECHA DATE,
SALARIO_ANTIGUO NUMBER,
SALARIO_NUEVO NUMBER);

/

--------------------
/ -- EJERCICIO 3
--------------------

CREATE OR REPLACE TRIGGER TR2_REG_AUD_INS
BEFORE INSERT 
ON REGIONS
BEGIN
    INSERT INTO AUDITORIA VALUES (USER,SYSDATE,null,null);
    COMMIT;
END;

----------------------------
/ --DEMOSTRACION EJERCICIO 3
----------------------------

INSERT INTO HR.REGIONS VALUES (5004,'XXXX');
COMMIT;
SELECT * FROM HR.AUDITORIA;

--------------------
/ -- EJERCICIO 4
--------------------

CREATE OR REPLACE TRIGGER TR3_EMPL_SAL_UPDT
BEFORE UPDATE
ON EMPLOYEES
FOR EACH ROW
BEGIN
    IF (:OLD.SALARY > :NEW.SALARY) THEN
        RAISE_APPLICATION_ERROR(-20015,'NO SE PUEDE BAJAR UN SALARIO');
    ELSE
        INSERT INTO AUDITORIA VALUES (USER,SYSDATE,:OLD.SALARY,:NEW.SALARY);
    END IF;
END;

----------------------------
/ --DEMOSTRACION EJERCICIO 4
----------------------------

UPDATE EMPLOYEES SET SALARY=1000 WHERE EMPLOYEE_ID=100;

--------------------
/ -- EJERCICIO 5
--------------------

CREATE OR REPLACE TRIGGER TR4_DEPT_INSRT
BEFORE INSERT 
ON DEPARTMENTS
FOR EACH ROW
DECLARE
    DEPTNO NUMBER;
BEGIN
    SELECT DEPARTMENT_ID INTO DEPTNO FROM DEPARTMENTS WHERE DEPARTMENT_ID = :NEW.DEPARTMENT_ID;
    RAISE_APPLICATION_ERROR(-20043,'EL DEPARTAMENTO YA EXISTE');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        IF :NEW.LOCATION_ID IS NULL THEN
            :NEW.LOCATION_ID:=1700;
        END IF;
        
        IF :NEW.MANAGER_ID IS NULL THEN
            :NEW.LOCATION_ID:=200;
        END IF;
END;
----------------------------
/ --DEMOSTRACION EJERCICIO 4
----------------------------
ROLLBACK;
INSERT INTO DEPARTMENTS VALUES (21,'GENMSSIN',null,null);
COMMIT;